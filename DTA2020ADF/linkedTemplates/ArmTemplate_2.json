{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DTA2020ADF"
		},
		"CloudSalesDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CloudSalesDB'"
		},
		"FourthCoffeeVM_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FourthCoffeeVM'"
		},
		"VanArsdaleOnPremSQLSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'VanArsdaleOnPremSQLSource'"
		},
		"FourthCoffeeVM_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "c:\\rentals\\"
		},
		"FourthCoffeeVM_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "southridge"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/southridgdvdesalesDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dboOrderDetails.txt",
						"folderPath": "SouthRidge/DVDSales",
						"fileSystem": "mdwsourcefiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderDetailID",
						"type": "String"
					},
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "MovieID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "UnitCost",
						"type": "String"
					},
					{
						"name": "LineNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/southridgedvdsalescurate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "salesorderdetails",
						"fileSystem": "mdwcurated"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/southridgedvdsalescurated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "salesorderdetails",
						"fileSystem": "mdwcurated"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSalesDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('CloudSalesDB_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultLinkedService",
							"type": "LinkedServiceReference"
						},
						"secretName": "SQLPassword-CloudSales-southridge"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeVM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FourthCoffeeVM_properties_typeProperties_host')]",
					"userId": "[parameters('FourthCoffeeVM_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FourthCoffeeVM_password')]"
					}
				},
				"connectVia": {
					"referenceName": "FourthCoffeeVMIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanArsdaleOnPremSQLSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('VanArsdaleOnPremSQLSource_connectionString')]"
				},
				"connectVia": {
					"referenceName": "VanArsdaleVMIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudStreamingRawPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_dea",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_dea",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "mdwsourcefiles/SouthRidge/StreamingSales/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_dea",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_dea",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Addresses"
								},
								"destination": {
									"fileName": "dboAddresses.txt"
								}
							},
							{
								"source": {
									"table": "Customers"
								},
								"destination": {
									"fileName": "dboCustomers.txt"
								}
							},
							{
								"source": {
									"table": "Transactions"
								},
								"destination": {
									"fileName": "dboTransactions.txt"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-09-15T20:30:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieCatalogRawPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ahf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "movies"
							},
							{
								"name": "Destination",
								"value": "mdwsourcefiles/SouthRidge/MovieCatalog/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ahf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ahf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-15T20:26:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_6hw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CloudSalesDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CloudSalesDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_pi6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VanArsdaleOnPremSQLSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/VanArsdaleOnPremSQLSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vku')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FourthCoffeeVM",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FourthCoffeeVM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowCatalogCuratedFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SouthridgeCatalogRawJSONFile",
								"type": "DatasetReference"
							},
							"name": "SouthridgeCatalogRawOutput"
						},
						{
							"dataset": {
								"referenceName": "FouthCoffeeMovieRawFile",
								"type": "DatasetReference"
							},
							"name": "FouthCoffeeMoviesRaw"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeActorsRawFile",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeActorsRaw"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeMovieActorRawFile",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieActor"
						},
						{
							"dataset": {
								"referenceName": "FouthCoffeeMovieOnlineMovieRawFile",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieOnlineMovieRaw"
						},
						{
							"dataset": {
								"referenceName": "VanArsdaleMoviesRawFile",
								"type": "DatasetReference"
							},
							"name": "VanArsdelMovieRawOutput"
						},
						{
							"dataset": {
								"referenceName": "VanArsdelActorsRawFile",
								"type": "DatasetReference"
							},
							"name": "VanArsdelActorsRawOutput"
						},
						{
							"dataset": {
								"referenceName": "VanArsdelOnlineMoviesRawFile",
								"type": "DatasetReference"
							},
							"name": "VanArsdelOnlineMoviesRawOutput"
						},
						{
							"dataset": {
								"referenceName": "VanArsdelActorMovieRawFile",
								"type": "DatasetReference"
							},
							"name": "VanArsdelMovieActorsRawOutput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MovieCatalogCuratedFile",
								"type": "DatasetReference"
							},
							"name": "CatalogCuratedSink"
						}
					],
					"transformations": [
						{
							"name": "FlattenForMultipleActors"
						},
						{
							"name": "SouthridgeSelectNeededCols"
						},
						{
							"name": "SouthridgeCatalogDervivedCols"
						},
						{
							"name": "JoinMovieActorToMovie"
						},
						{
							"name": "JoinMovieActorandMovietoActor"
						},
						{
							"name": "JoinInOnlineMovieID"
						},
						{
							"name": "FourthCoffeeDervivedCols"
						},
						{
							"name": "VanArsdelMovieActorToActor"
						},
						{
							"name": "VanArsdelJointoMovie"
						},
						{
							"name": "VanArsdelJointoOnlineMovie"
						},
						{
							"name": "VanArsdelDerivedCols"
						},
						{
							"name": "FourthCoffeeSelectNeededCols"
						},
						{
							"name": "VanArsdelSelectNeededCols"
						},
						{
							"name": "UnionAll"
						}
					],
					"script": "source(output(\n\t\t{_attachments} as string,\n\t\t{_etag} as string,\n\t\t{_rid} as string,\n\t\t{_self} as string,\n\t\t{_ts} as integer,\n\t\tactors as (name as string)[],\n\t\tavailabilityDate as timestamp,\n\t\tgenre as string,\n\t\tid as string,\n\t\trating as string,\n\t\treleaseYear as short,\n\t\truntime as short,\n\t\tstreamingAvailabilityDate as timestamp,\n\t\ttier as short,\n\t\ttitle as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tpartitionBy('hash', 1)) ~> SouthridgeCatalogRawOutput\nsource(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as integer,\n\t\tReleaseDate as timestamp 'MM-dd-yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FouthCoffeeMoviesRaw\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> FourthCoffeeActorsRaw\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> FourthCoffeeMovieActor\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FourthCoffeeMovieOnlineMovieRaw\nsource(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as integer,\n\t\tReleaseDate as timestamp 'MM-dd-yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> VanArsdelMovieRawOutput\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> VanArsdelActorsRawOutput\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> VanArsdelOnlineMoviesRawOutput\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> VanArsdelMovieActorsRawOutput\nSouthridgeCatalogRawOutput foldDown(unroll(actors),\n\tmapColumn(\n\t\tActorName = actors.name,\n\t\tavailabilityDate,\n\t\tgenre,\n\t\trating,\n\t\treleaseYear,\n\t\truntime,\n\t\tstreamingAvailabilityDate,\n\t\ttier,\n\t\ttitle,\n\t\tid,\n\t\t{_rid},\n\t\t{_self},\n\t\t{_etag},\n\t\t{_attachments},\n\t\t{_ts}\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FlattenForMultipleActors\nSouthridgeCatalogDervivedCols select(mapColumn(\n\t\tActorName,\n\t\tPhysicalAvailabilityDate = availabilityDate,\n\t\tGenre = genre,\n\t\tRating = rating,\n\t\tTheatricalReleaseYear = releaseYear,\n\t\tRuntimeMinutes,\n\t\tStreamingAvailabilityDate = streamingAvailabilityDate,\n\t\tTitle = title,\n\t\tSourceSystemMovieID = id,\n\t\tSouthridgeMovieID = id,\n\t\tSourceSystemID,\n\t\tGlobalMovieID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SouthridgeSelectNeededCols\nFlattenForMultipleActors derive(RuntimeMinutes = toInteger(runtime),\n\t\tGlobalMovieID = uuid(),\n\t\tSourceSystemID = \"southridge\") ~> SouthridgeCatalogDervivedCols\nFourthCoffeeMovieActor, FouthCoffeeMoviesRaw join(FourthCoffeeMovieActor@MovieID == FouthCoffeeMoviesRaw@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMovieActorToMovie\nJoinMovieActorToMovie, FourthCoffeeActorsRaw join(FourthCoffeeMovieActor@ActorID == FourthCoffeeActorsRaw@ActorID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinMovieActorandMovietoActor\nJoinMovieActorandMovietoActor, FourthCoffeeMovieOnlineMovieRaw join(FouthCoffeeMoviesRaw@MovieID == FourthCoffeeMovieOnlineMovieRaw@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinInOnlineMovieID\nJoinInOnlineMovieID derive(SourceSystemID = \"fourthcoffee\",\n\t\tGlobalMovieID = uuid()) ~> FourthCoffeeDervivedCols\nVanArsdelMovieActorsRawOutput, VanArsdelActorsRawOutput join(VanArsdelMovieActorsRawOutput@ActorID == VanArsdelActorsRawOutput@ActorID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> VanArsdelMovieActorToActor\nVanArsdelMovieActorToActor, VanArsdelMovieRawOutput join(VanArsdelMovieActorsRawOutput@MovieID == VanArsdelMovieRawOutput@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> VanArsdelJointoMovie\nVanArsdelJointoMovie, VanArsdelOnlineMoviesRawOutput join(VanArsdelMovieActorsRawOutput@MovieID == VanArsdelOnlineMoviesRawOutput@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> VanArsdelJointoOnlineMovie\nVanArsdelJointoOnlineMovie derive(SourceSystemID = \"vanarsdel\",\n\t\tGlobalMovieID = uuid()) ~> VanArsdelDerivedCols\nFourthCoffeeDervivedCols select(mapColumn(\n\t\tSourceSystemMovieID = FourthCoffeeMovieActor@MovieID,\n\t\tActorID = FourthCoffeeMovieActor@ActorID,\n\t\tTitle = MovieTitle,\n\t\tGenre = Category,\n\t\tRating,\n\t\tRuntimeMinutes = RunTimeMin,\n\t\tPhysicalAvailabilityDate = ReleaseDate,\n\t\tActorName,\n\t\tGender,\n\t\tSouthridgeMovieID = OnlineMovieID,\n\t\tSourceSystemID,\n\t\tGlobalMovieID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FourthCoffeeSelectNeededCols\nVanArsdelDerivedCols select(mapColumn(\n\t\tSourceSystemMovieID = VanArsdelMovieActorsRawOutput@MovieID,\n\t\tActorID = VanArsdelMovieActorsRawOutput@ActorID,\n\t\tActorName,\n\t\tGender,\n\t\tTitle = MovieTitle,\n\t\tGenre = Category,\n\t\tRating,\n\t\tRuntimeMinutes = RunTimeMin,\n\t\tPhysicalAvailabilityDate = ReleaseDate,\n\t\tSouthridgeMovieID = OnlineMovieID,\n\t\tSourceSystemID,\n\t\tGlobalMovieID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> VanArsdelSelectNeededCols\nSouthridgeSelectNeededCols, FourthCoffeeSelectNeededCols, VanArsdelSelectNeededCols union(byName: true)~> UnionAll\nUnionAll sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MovieCatalog.csv'],\n\tmapColumn(\n\t\tActorName,\n\t\tPhysicalAvailabilityDate,\n\t\tGenre,\n\t\tRating,\n\t\tTheatricalReleaseYear,\n\t\tRuntimeMinutes,\n\t\tStreamingAvailabilityDate,\n\t\tTitle,\n\t\tSourceSystemMovieID,\n\t\tSouthridgeMovieID,\n\t\tSourceSystemID,\n\t\tGlobalMovieID,\n\t\tActorID,\n\t\tGender\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CatalogCuratedSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowCustomerCuratedFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "testing",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RawSouthRidgeDVDSalesCustomerFlatFile",
								"type": "DatasetReference"
							},
							"name": "SRDVDSalesCustomerRawOutput"
						},
						{
							"dataset": {
								"referenceName": "SRDVDSalesCustomerAddressesFlatFile",
								"type": "DatasetReference"
							},
							"name": "SRDVDSalesCustomerAddressesOutput"
						},
						{
							"dataset": {
								"referenceName": "SRStreamingCustomerFlatFile",
								"type": "DatasetReference"
							},
							"name": "SRStreamingCustomerRawOutput"
						},
						{
							"dataset": {
								"referenceName": "SRStreamingCustomerAddyFlatFile",
								"type": "DatasetReference"
							},
							"name": "SRStreamingCustomerAddressRawSource"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeCustomerRaw",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeCustomer"
						},
						{
							"dataset": {
								"referenceName": "VanArsdaleRaw",
								"type": "DatasetReference"
							},
							"name": "VanArsdaleCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CustomerDimCurated",
								"type": "DatasetReference"
							},
							"name": "WritetoCustomerCurated"
						}
					],
					"transformations": [
						{
							"name": "JoinCustomertoAddy"
						},
						{
							"name": "DerivedColumnsForCustomerDim"
						},
						{
							"name": "JoinCustomerToAddyStreaming"
						},
						{
							"name": "DerivedColumnsForStreamingCustomers"
						},
						{
							"name": "UnionCustomers"
						},
						{
							"name": "DVDCustomerColSelect"
						},
						{
							"name": "StreamingCustomerColSelect"
						},
						{
							"name": "DerivedColumnFourthCoffee"
						},
						{
							"name": "DerivedColumnVanArsdale"
						},
						{
							"name": "FourthCoffeeSelect"
						}
					],
					"script": "source(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tpartitionBy('hash', 1)) ~> SRDVDSalesCustomerRawOutput\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS',\n\t\tUpdatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> SRDVDSalesCustomerAddressesOutput\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS',\n\t\tUpdatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true) ~> SRStreamingCustomerRawOutput\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS',\n\t\tUpdatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tpartitionBy('hash', 1)) ~> SRStreamingCustomerAddressRawSource\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as date 'yyyy-MM-dd',\n\t\tUpdatedDate as date 'yyyy-MM-dd'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tpartitionBy('hash', 1)) ~> FourthCoffeeCustomer\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS',\n\t\tUpdatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tpartitionBy('hash', 1)) ~> VanArsdaleCustomer\nSRDVDSalesCustomerRawOutput, SRDVDSalesCustomerAddressesOutput join(SRDVDSalesCustomerRawOutput@CustomerID == SRDVDSalesCustomerAddressesOutput@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCustomertoAddy\nJoinCustomertoAddy derive(sourcesystemid = \"southridgedvd\",\n\t\tMasterCreateDate = greatest(SRDVDSalesCustomerAddressesOutput@CreatedDate,SRDVDSalesCustomerRawOutput@CreatedDate ),\n\t\tMasterUpdateDate = greatest(SRDVDSalesCustomerRawOutput@UpdatedDate,SRDVDSalesCustomerAddressesOutput@UpdatedDate),\n\t\tGlobalCustomerID = uuid()) ~> DerivedColumnsForCustomerDim\nSRStreamingCustomerRawOutput, SRStreamingCustomerAddressRawSource join(SRStreamingCustomerRawOutput@CustomerID == SRStreamingCustomerAddressRawSource@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCustomerToAddyStreaming\nJoinCustomerToAddyStreaming derive(sourcesystemid = \"southridgestreaming\",\n\t\tMasterCreateDate = greatest(SRStreamingCustomerAddressRawSource@CreatedDate, SRStreamingCustomerRawOutput@CreatedDate),\n\t\tMasterUpdateDate = greatest(SRStreamingCustomerAddressRawSource@UpdatedDate, SRStreamingCustomerRawOutput@UpdatedDate),\n\t\tGlobalCustomerID = uuid()) ~> DerivedColumnsForStreamingCustomers\nDVDCustomerColSelect, StreamingCustomerColSelect, FourthCoffeeSelect, DerivedColumnVanArsdale union(byName: true)~> UnionCustomers\nDerivedColumnsForCustomerDim select(mapColumn(\n\t\tCustomerID = SRDVDSalesCustomerRawOutput@CustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tAddressID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tsourcesystemid,\n\t\tCreatedDate = MasterCreateDate,\n\t\tUpdatedDate = MasterUpdateDate,\n\t\tGlobalCustomerID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> DVDCustomerColSelect\nDerivedColumnsForStreamingCustomers select(mapColumn(\n\t\tCustomerID = SRStreamingCustomerRawOutput@CustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tAddressID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tsourcesystemid,\n\t\tCreatedDate = MasterCreateDate,\n\t\tUpdatedDate = MasterUpdateDate,\n\t\tGlobalCustomerID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> StreamingCustomerColSelect\nFourthCoffeeCustomer derive(sourcesystemid = \"FourthCoffee\",\n\t\tCreatedDateToTimeStamp = toTimestamp(concat(toString(CreatedDate, 'yyyy-MM-dd'),\" 00:00:00.0000000\"),'yyyy-MM-dd HH:mm:ss.SSSSSSS'),\n\t\tUpdatedDateToTimeStamp = toTimestamp(concat(toString(UpdatedDate, 'yyyy-MM-dd'),\" 00:00:00.0000000\"),'yyyy-MM-dd HH:mm:ss.SSSSSSS'),\n\t\tGlobalCustomerID = uuid()) ~> DerivedColumnFourthCoffee\nVanArsdaleCustomer derive(sourcesystemid = \"VanArsdale\",\n\t\tGlobalCustomerID = uuid()) ~> DerivedColumnVanArsdale\nDerivedColumnFourthCoffee select(mapColumn(\n\t\tCustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tPhoneNumber,\n\t\tsourcesystemid,\n\t\tCreatedDate = CreatedDateToTimeStamp,\n\t\tUpdatedDate = UpdatedDateToTimeStamp,\n\t\tGlobalCustomerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FourthCoffeeSelect\nUnionCustomers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Customers.csv'],\n\tmapColumn(\n\t\tCustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tAddressID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tsourcesystemid,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tGlobalCustomerID\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapOutputs: true) ~> WritetoCustomerCurated"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowDVDSalesCuratedFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesOrdersRaw",
								"type": "DatasetReference"
							},
							"name": "southridgdvdesalesorders"
						},
						{
							"dataset": {
								"referenceName": "southridgdvdesalesDetails",
								"type": "DatasetReference"
							},
							"name": "southridgdvdesalesdetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "southridgedvdsalescurate",
								"type": "DatasetReference"
							},
							"name": "southridgedvdsalescurated"
						}
					],
					"transformations": [
						{
							"name": "Join2"
						},
						{
							"name": "sourceid"
						}
					],
					"script": "source(output(\n\t\tOrderID as string,\n\t\tCustomerID as string,\n\t\tOrderDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tTotalCost as double,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> southridgdvdesalesorders\nsource(output(\n\t\tOrderDetailID as string,\n\t\tOrderID as string,\n\t\tMovieID as string,\n\t\tQuantity as integer,\n\t\tUnitCost as double,\n\t\tLineNumber as string,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> southridgdvdesalesdetails\nsouthridgdvdesalesdetails, southridgdvdesalesorders join(southridgdvdesalesdetails@OrderID == southridgdvdesalesorders@OrderID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join2\nJoin2 derive(sourcesystemid = \"southridgedvd\",\n\t\tsalesorderGUID = uuid()) ~> sourceid\nsourceid sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['southridgesalesdvdcurated.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> southridgedvdsalescurated"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/southridgdvdesalesDetails')]",
				"[concat(variables('factoryId'), '/datasets/southridgedvdsalescurate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRentalsCuratedFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Import data from FourthCoffeeADLSSourceTransactions",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FourthCoffeeDataLakeSourceTransactions",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeSourceFiles"
						},
						{
							"dataset": {
								"referenceName": "VanArsdaleADLSSourceTransactions",
								"type": "DatasetReference"
							},
							"name": "VanArsdaleSourceFiles"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DVDRentalTransactionsSink",
								"type": "DatasetReference"
							},
							"name": "DVDRentalTransactions"
						}
					],
					"transformations": [
						{
							"name": "FourthCoffeeDerivedColumns"
						},
						{
							"name": "VanArsdaleDerivedColumns"
						},
						{
							"name": "UnionFourthCoffeeAndVanArsdaleTxn"
						},
						{
							"name": "VanArsdaleSelectColumns"
						},
						{
							"name": "DVDRentalGUID"
						}
					],
					"script": "source(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as date 'yyyyMMdd',\n\t\tReturnDate as date 'yyyyMMdd',\n\t\tRentalCost as double,\n\t\tLateFee as double,\n\t\tRewindFlag as boolean,\n\t\tCreatedDate as date 'yyyy-MM-dd',\n\t\tUpdatedDate as date 'yyyy-MM-dd'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FourthCoffeeSourceFiles\nsource(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as date 'yyyyMMdd',\n\t\tReturnDate as date 'yyyyMMdd',\n\t\tRentalCost as double,\n\t\tLateFee as double,\n\t\tRewindFlag as boolean,\n\t\tCreatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS',\n\t\tUpdatedDate as timestamp 'yyyy-MM-dd HH:mm:ss.SSSSSSS'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> VanArsdaleSourceFiles\nFourthCoffeeSourceFiles derive(SourceSystemNm = \"FourthCoffee\") ~> FourthCoffeeDerivedColumns\nVanArsdaleSourceFiles derive(SourceSystemNm = \"VanArsdale\",\n\t\tCreatedDateNew = toDate(toString(CreatedDate, 'yyyy-MM-dd HH:mm:ss.SS'), 'yyyy-MM-dd'),\n\t\tUpdatedDateNew = toDate(toString(UpdatedDate, 'yyyy-MM-dd HH:mm:ss.SS'), 'yyyy-MM-dd')) ~> VanArsdaleDerivedColumns\nFourthCoffeeDerivedColumns, VanArsdaleSelectColumns union(byName: true)~> UnionFourthCoffeeAndVanArsdaleTxn\nVanArsdaleDerivedColumns select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID,\n\t\tRentalDate,\n\t\tReturnDate,\n\t\tRentalCost,\n\t\tLateFee,\n\t\tRewindFlag,\n\t\tSourceSystemNm,\n\t\tCreatedDate = CreatedDateNew,\n\t\tUpdatedDate = UpdatedDateNew\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VanArsdaleSelectColumns\nUnionFourthCoffeeAndVanArsdaleTxn derive(RentalTxnGUID = uuid()) ~> DVDRentalGUID\nDVDRentalGUID sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DVDRentalDetails.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DVDRentalTransactions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadRatingsDW')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MovieCatalogCuratedFile",
								"type": "DatasetReference"
							},
							"name": "CuratedMovies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MDWOH_Team22_Ratings",
								"type": "DatasetReference"
							},
							"name": "LoadMovieRatingsTableDW"
						}
					],
					"transformations": [
						{
							"name": "ExtractMovieRatings"
						},
						{
							"name": "GroupMovieRatings"
						}
					],
					"script": "source(output(\n\t\tActorName as string,\n\t\tPhysicalAvailabilityDate as timestamp,\n\t\tGenre as string,\n\t\tRating as string,\n\t\tTheatricalReleaseYear as short,\n\t\tRuntimeMinutes as short,\n\t\tStreamingAvailabilityDate as timestamp,\n\t\tTitle as string,\n\t\tSourceSystemMovieID as string,\n\t\tSouthridgeMovieID as string,\n\t\tSourceSystemID as string,\n\t\tGlobalMovieID as string,\n\t\tActorID as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CuratedMovies\nCuratedMovies select(mapColumn(\n\t\tRating\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ExtractMovieRatings\nExtractMovieRatings aggregate(groupBy(Rating),\n\tCountMovieRatings = count(1)) ~> GroupMovieRatings\nGroupMovieRatings sink(input(\n\t\tMovieRatingSK as integer,\n\t\tMovieRatingDescription as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: false,\n\tmapColumn(\n\t\tMovieRatingDescription = Rating\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> LoadMovieRatingsTableDW"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CatalogCuratedPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowCatalogCuratedFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowCatalogCuratedFile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SouthridgeCatalogRawOutput": {},
									"FouthCoffeeMoviesRaw": {},
									"FourthCoffeeActorsRaw": {},
									"FourthCoffeeMovieActor": {},
									"FourthCoffeeMovieOnlineMovieRaw": {},
									"VanArsdelMovieRawOutput": {},
									"VanArsdelActorsRawOutput": {},
									"VanArsdelOnlineMoviesRawOutput": {},
									"VanArsdelMovieActorsRawOutput": {},
									"CatalogCuratedSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlowCatalogCuratedFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CloudSalesRawPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Aaron Updated Description",
				"activities": [
					{
						"name": "ForEach_6hw",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_6hw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "mdwsourcefiles/SouthRidge/DVDSales/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_6hw",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_6hw",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Addresses"
								},
								"destination": {
									"fileName": "dboAddresses.txt"
								}
							},
							{
								"source": {
									"table": "Customers"
								},
								"destination": {
									"fileName": "dboCustomers.txt"
								}
							},
							{
								"source": {
									"table": "OrderDetails"
								},
								"destination": {
									"fileName": "dboOrderDetails.txt"
								}
							},
							{
								"source": {
									"table": "Orders"
								},
								"destination": {
									"fileName": "dboOrders.txt"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-09-15T20:12:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_6hw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerCuratedPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowCustomerToCurated",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowCustomerCuratedFile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRDVDSalesCustomerRawOutput": {},
									"SRDVDSalesCustomerAddressesOutput": {},
									"SRStreamingCustomerRawOutput": {},
									"SRStreamingCustomerAddressRawSource": {},
									"FourthCoffeeCustomer": {},
									"VanArsdaleCustomer": {},
									"WritetoCustomerCurated": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlowCustomerCuratedFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DVDRentalsCurateFilePipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowRentalsCuratedFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowRentalsCuratedFile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FourthCoffeeSourceFiles": {},
									"VanArsdaleSourceFiles": {},
									"DVDRentalTransactions": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlowRentalsCuratedFile')]"
			]
		}
	]
}